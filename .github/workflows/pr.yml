name: PR

on: pull_request
jobs:
  integration_test:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup JDK 11
        uses: actions/setup-java@v2.5.0
        with:
          java-version: '11'
          distribution: 'zulu'
          cache: 'gradle'
      - name: Create Lokalise secret
        run: |
          cat <<EOT > lokalise.properties
          id=${LOKALISE_ID}
          token=${LOKALISE_TOKEN}
          EOT
        env:
          LOKALISE_ID: ${{ secrets.LOKALISE_ID }}
          LOKALISE_TOKEN: ${{ secrets.LOKALISE_TOKEN }}
      - name: Create Adyen secret
        run: |
          cat <<EOT > app/src/debug/res/values/adyen.xml
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <string name="ADYEN_CLIENT_KEY" translatable="false">${ADYEN_CLIENT_KEY}</string>
          </resources>
          EOT
        env:
          ADYEN_CLIENT_KEY: ${{ secrets.ADYEN_CLIENT_KEY_TEST }}
      - name: Create Shake secret
        run: |
          cat <<EOT > app/src/debug/res/values/shake.xml
          <?xml version="1.0" encoding="utf-8" ?>
          <resources>
              <string name="SHAKE_CLIENT_ID" translatable="false">${SHAKE_CLIENT_ID}</string>
              <string name="SHAKE_CLIENT_SECRET" translatable="false">${SHAKE_CLIENT_SECRET}</string>
          </resources>
          EOT
        env:
          SHAKE_CLIENT_ID: ${{ secrets.SHAKE_CLIENT_ID }}
          SHAKE_CLIENT_SECRET: ${{ secrets.SHAKE_CLIENT_SECRET }}
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Download Apollo Schema
        run: ./gradlew apollo:downloadApolloSchema
      - name: Download Translations
        run: ./gradlew app:downloadStrings
      - name: Generate License-report
        run: ./gradlew licenseReleaseReport
      - name: Instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 28
          arch: x86_64
          target: google_apis
          profile: pixel_3a
          script: ./gradlew connectedDebugAndroidTest
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: app/build/reports
  unit_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 11
        uses: actions/setup-java@v2.5.0
        with:
          java-version: '11'
          distribution: 'zulu'
          cache: 'gradle'
      - name: Create Lokalise secret
        run: |
          cat <<EOT > lokalise.properties
          id=${LOKALISE_ID}
          token=${LOKALISE_TOKEN}
          EOT
        env:
          LOKALISE_ID: ${{ secrets.LOKALISE_ID }}
          LOKALISE_TOKEN: ${{ secrets.LOKALISE_TOKEN }}
      - name: Create Adyen secret
        run: |
          cat <<EOT > app/src/debug/res/values/adyen.xml
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <string name="ADYEN_CLIENT_KEY" translatable="false">${ADYEN_CLIENT_KEY}</string>
          </resources>
          EOT
        env:
          ADYEN_CLIENT_KEY: ${{ secrets.ADYEN_CLIENT_KEY_TEST }}
      - name: Create Shake secret
        run: |
          cat <<EOT > app/src/debug/res/values/shake.xml
          <?xml version="1.0" encoding="utf-8" ?>
          <resources>
              <string name="SHAKE_CLIENT_ID" translatable="false">${SHAKE_CLIENT_ID}</string>
              <string name="SHAKE_CLIENT_SECRET" translatable="false">${SHAKE_CLIENT_SECRET}</string>
          </resources>
          EOT
        env:
          SHAKE_CLIENT_ID: ${{ secrets.SHAKE_CLIENT_ID }}
          SHAKE_CLIENT_SECRET: ${{ secrets.SHAKE_CLIENT_SECRET }}
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Download Apollo Schema
        run: ./gradlew apollo:downloadApolloSchema
      - name: Download Translations
        run: ./gradlew app:downloadStrings
      - name: Generate License-report
        run: ./gradlew licenseReleaseReport
      - name: Unit tests
        run: ./gradlew testDebugUnitTest
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 11
        uses: actions/setup-java@v2.5.0
        with:
          java-version: '11'
          distribution: 'zulu'
          cache: 'gradle'
      - name: Create Lokalise secret
        run: |
          cat <<EOT > lokalise.properties
          id=${LOKALISE_ID}
          token=${LOKALISE_TOKEN}
          EOT
        env:
          LOKALISE_ID: ${{ secrets.LOKALISE_ID }}
          LOKALISE_TOKEN: ${{ secrets.LOKALISE_TOKEN }}
      - name: Create Adyen secret
        run: |
          cat <<EOT > app/src/debug/res/values/adyen.xml
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <string name="ADYEN_CLIENT_KEY" translatable="false">${ADYEN_CLIENT_KEY}</string>
          </resources>
          EOT
        env:
          ADYEN_CLIENT_KEY: ${{ secrets.ADYEN_CLIENT_KEY_TEST }}
      - name: Create Shake secret
        run: |
          cat <<EOT > app/src/debug/res/values/shake.xml
          <?xml version="1.0" encoding="utf-8" ?>
          <resources>
              <string name="SHAKE_CLIENT_ID" translatable="false">${SHAKE_CLIENT_ID}</string>
              <string name="SHAKE_CLIENT_SECRET" translatable="false">${SHAKE_CLIENT_SECRET}</string>
          </resources>
          EOT
        env:
          SHAKE_CLIENT_ID: ${{ secrets.SHAKE_CLIENT_ID }}
          SHAKE_CLIENT_SECRET: ${{ secrets.SHAKE_CLIENT_SECRET }}
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Download Apollo Schema
        run: ./gradlew apollo:downloadApolloSchema
      - name: Download Translations
        run: ./gradlew app:downloadStrings
      - name: Generate License-report
        run: ./gradlew licenseReleaseReport
      - run: ./gradlew lintDebug
      - uses: yutailang0119/action-android-lint@v1.0.2
        with:
          xml_path: app/build/reports/lint-results-debug.xml
  ktlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Homebrew/actions/setup-homebrew@master
      - run: sudo apt-get install libxml2-utils
      - run: brew install ktlint --build-from-source ktlint
      - name: run ktlint
        continue-on-error: true
        run: |
          ktlint "\!**/generated/**" "**/src/**/*.kt*" --reporter=checkstyle,output=build/ktlint-report-in-checkstyle-format.xml
      - uses: yutailang0119/action-ktlint@v2.0.0
        with:
          report-path: build/ktlint-report-in-checkstyle-format.xml
      - run: |
          if [[ $(xmllint --xpath "count(//file)" build/ktlint-report-in-checkstyle-format.xml) -gt 0 ]]; then
              exit 1;
          fi;
