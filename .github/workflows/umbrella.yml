name: Trigger new umbrella release

on:
  push:
    branches:
      - feature/kmp-publication
  workflow_dispatch:

concurrency:
  group: ref-${{ github.ref }}
  cancel-in-progress: true

jobs:
  umbrella_release:
    name: Build and release new umbrella version
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      #      - uses: gradle/actions/wrapper-validation@v4
      #      - name: Copy CI gradle.properties
      #        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties
      #      - uses: actions/setup-java@v4.7.1
      #        with:
      #          java-version: 21
      #          distribution: 'zulu'
      #      - name: Prebuild
      #        run: ./scripts/ci-prebuild.sh
      #        env:
      #          HEDVIG_GITHUB_PACKAGES_USER: ${{ secrets.HEDVIG_GITHUB_PACKAGES_USER }}
      #          HEDVIG_GITHUB_PACKAGES_TOKEN: ${{ secrets.HEDVIG_GITHUB_PACKAGES_TOKEN }}
      #          DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      #          LOKALISE_ID: ${{ secrets.LOKALISE_ID }}
      #          LOKALISE_TOKEN: ${{ secrets.LOKALISE_TOKEN }}
      #      - name: Setup Gradle
      #        uses: gradle/actions/setup-gradle@v4
      #        with:
      #          # Only write to the cache for builds on the 'develop' branch
      #          cache-read-only: false
      #      - run: echo VERSION_CODE=$(expr 1 + ${{ github.run_number }} + ${{ github.run_attempt }} - 1) >> $GITHUB_ENV
      - run: echo VERSION_CODE=0.0.5 >> $GITHUB_ENV

      - run: |
          set -x
          CHECKSUM='35fc65d3a1e912539ec609e4f564b885dca4e56615da3bb44d5f93549d394a72'
          URL="https://github.com/HedvigInsurance/umbrella/releases/download/v${VERSION_CODE}/umbrella.xcframework.zip"
          CONTENT=$(cat << EOF | base64 -w 0
          // swift-tools-version:5.3
  
          import PackageDescription
          
          let package = Package(
            name: "umbrella",
            platforms: [
              .iOS(.v14),
            ],
            products: [
              .library(
                name: "umbrella",
                targets: ["umbrella"]
              )
            ],
            targets: [
              .binaryTarget(
                name: "umbrella",
                url: "$URL",
                checksum: "$CHECKSUM"
              )
            ]
          )
          EOF
          )
          echo PACKAGE_SWIFT_FILE_CONTENT=$CONTENT | base64 -d >> $GITHUB_ENV
        env:
          VERSION_CODE: ${{ env.VERSION_CODE }}
      - uses: actions/checkout@v4
        with:
          repository: hedviginsurance/umbrella
          token: ${{ secrets.UMBRELLA_REPO_PAT }}
      - name: Add file
        run: echo $PACKAGE_SWIFT_FILE_CONTENT > Package.swift
        env:
          PACKAGE_SWIFT_FILE_CONTENT: ${{ env.PACKAGE_SWIFT_FILE_CONTENT }}
      - name: Commit
        run: |
          git commit -am "Update Package.swift"
          git tag -a $VERSION_CODE -m "Release $VERSION_CODE"
          git push
          git push --tags
          gh release create "$VERSION_CODE" "./build/my_artifact.zip" \
                      --title "$RELEASE_TITLE" \
                      --notes "$RELEASE_NOTES" \
        env:
          VERSION_CODE: ${{ env.VERSION_CODE }}
#      - name: Create file
#        run: |
#          git commit -am "Automated report"
#          git push
#      - name: Update resources
#        uses: test-room-7/action-update-file@v1
#        with:
#          file-path: Package.swift
#          commit-msg: Update Package.swift
#          github-token: ${{ secrets.GITHUB_TOKEN }}

        #          RELEASE_DIR="${{ github.workspace }}/app/umbrella/build/XCFrameworks/release/"
        #
        #          function zipXCFramework {
        #            cd $1
        #            zip -r umbrella.xcframework.zip umbrella.xcframework/*
        #            cd -
        #          }
        #
        #          zipXCFramework $RELEASE_DIR
        #
        #          function checksum {
        #            echo $(swift package compute-checksum $RELEASE_DIR$1)
        #          }
        #          CHECKSUM=$(checksum umbrella.xcframework.zip)
        #          function url {
        #            echo https://github.com/HedvigInsurance/umbrella/releases/download/v$1/umbrella.xcframework.zip
        #          }
        #          URL=$(url $VERSION_CODE)

        ##      - name: Build
        ##        run: ./gradlew :umbrella:assembleUmbrellaReleaseXCFramework
        #      - name: Generate Package.swift file
        #        run: ./scripts/generate_package_swift.main.kts
        #        env:
        #          VERSION_CODE: ${{ env.VERSION_CODE }}
        ##      - name: Script instead
        ##        run: echo PACKAGE_SWIFT_FILE_CONTENT=asd >> $GITHUB_ENV

