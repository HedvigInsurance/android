name: Trigger new umbrella release

on:
  push:
    branches:
      - feature/kmp-publication
  workflow_dispatch:

concurrency:
  group: ref-${{ github.ref }}
  cancel-in-progress: true

jobs:
  umbrella_release:
    name: Build and release new umbrella version
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/wrapper-validation@v4
      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties
      - uses: actions/setup-java@v4.7.1
        with:
          java-version: 21
          distribution: 'zulu'
      - name: Prebuild
        run: ./scripts/ci-prebuild.sh
        env:
          HEDVIG_GITHUB_PACKAGES_USER: ${{ secrets.HEDVIG_GITHUB_PACKAGES_USER }}
          HEDVIG_GITHUB_PACKAGES_TOKEN: ${{ secrets.HEDVIG_GITHUB_PACKAGES_TOKEN }}
          DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
          LOKALISE_ID: ${{ secrets.LOKALISE_ID }}
          LOKALISE_TOKEN: ${{ secrets.LOKALISE_TOKEN }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          # Only write to the cache for builds on the 'develop' branch
          cache-read-only: false
#      - run: echo VERSION_CODE=$(expr 1 + ${{ github.run_number }} + ${{ github.run_attempt }} - 1) >> $GITHUB_ENV
      - name: Build
        run: ./gradlew :umbrella:assembleUmbrellaReleaseXCFramework
      - run: echo VERSION_CODE=0.0.31 >> $GITHUB_ENV

      - name: Create Package.swift
        run: |
          set -x

          RELEASE_DIR="${{ github.workspace }}/app/umbrella/build/XCFrameworks/release/"

          function zipXCFramework {
            cd $1
            zip -r umbrella.xcframework.zip umbrella.xcframework/*
            cd -
          }
          zipXCFramework $RELEASE_DIR
          function checksum {
            echo $(swift package compute-checksum $RELEASE_DIR$1)
          }
          CHECKSUM=$(checksum umbrella.xcframework.zip)
          function url {
            echo https://github.com/HedvigInsurance/umbrella/releases/download/$1/umbrella.xcframework.zip
          }
          URL=$(url $VERSION_CODE)

          # Define the content for Package.swift
          PACKAGE_SWIFT_CONTENT_RAW=$(cat << EOF
          // swift-tools-version:5.3

          import PackageDescription

          let package = Package(
            name: "umbrella",
            platforms: [
              .iOS(.v14),
            ],
            products: [
              .library(
                name: "umbrella",
                targets: ["umbrella"]
              )
            ],
            targets: [
              .binaryTarget(
                name: "umbrella",
                url: "$URL",
                checksum: "$CHECKSUM"
              )
            ]
          )
          EOF
          )

          PACKAGE_SWIFT_CONTENT_ENCODED=$(echo "$PACKAGE_SWIFT_CONTENT_RAW" | base64)

          echo "PACKAGE_SWIFT_FILE_URL=$URL" >> $GITHUB_ENV
          echo "PACKAGE_SWIFT_FILE_CONTENT=$PACKAGE_SWIFT_CONTENT_ENCODED" >> $GITHUB_ENV
        env:
          VERSION_CODE: ${{ env.VERSION_CODE }}
      - uses: actions/checkout@v4
        with:
          path: path_umbrella
          repository: hedviginsurance/umbrella
          token: ${{ secrets.UMBRELLA_REPO_PAT }}
      - name: Add file
        run: echo $PACKAGE_SWIFT_FILE_CONTENT | base64 -d > path_umbrella/Package.swift
        env:
          PACKAGE_SWIFT_FILE_CONTENT: ${{ env.PACKAGE_SWIFT_FILE_CONTENT }}
      - name: Commit
        run: |
          cd path_umbrella
          git remote rm origin
          git remote add origin https://github.com/HedvigInsurance/umbrella.git
          git commit -am "Update Package.swift"
          git tag -a $VERSION_CODE -m "Release $VERSION_CODE"
          git push --set-upstream origin master
          git push --tags
          cd ..
          gh release create "$VERSION_CODE" app/umbrella/build/XCFrameworks/release/umbrella.xcframework.zip \
            --fail-on-no-commits \
            --verify-tag \
            --repo https://github.com/HedvigInsurance/umbrella
        env:
          VERSION_CODE: ${{ env.VERSION_CODE }}
          GH_TOKEN: ${{ secrets.UMBRELLA_REPO_PAT }}